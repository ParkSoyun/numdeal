name: CI/CD

on:
  pull_request:
    branches: [ "master" ]

jobs:
  CI-CD:
    runs-on: ubuntu-latest

    steps:
    - name: 저장소 Checkout
      uses: actions/checkout@v3
      
    - name: JDK 세팅
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: application-prod.properties 생성
      run: |
        cd ./src/main/resources 
        touch ./application-prod.properties 
        echo "${{ secrets.PROPERTIES_PROD }}" > ./application-prod.properties 
      shell: bash
        
    - name: 스프링부트 애플리케이션 빌드
      run: |
          chmod +x ./gradlew
          ./gradlew build

    - name: 도커 이미지 빌드
      run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }} .
          
    - name: Docker Hub 로그인
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
          
    - name: 생성한 이미지 Docker Hub에 푸시
      run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}

    - name: WAS 인스턴스에 배포 및 애플리케이션 실행
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.HOST }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
              docker stop $(docker ps -a -q) 
              sudo docker rm -f $(docker ps -qa)
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}
              docker-compose up -d
              docker image prune -f
              sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}
